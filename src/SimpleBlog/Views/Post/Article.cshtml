@model PostViewModel
@{
    ViewData["Title"] = Model.Post.Title;
}

<div class="card">
    <div class="card-body">
        <h1>@Model.Post.Title</h1>
        <a class="btn btn-light btn-sm" asp-controller="Category" asp-action="PostList" asp-route-slug="@Model.Post.Category.Slug">@Html.DisplayFor(m => m.Post.Category.Name)</a>
        <div class="d-flex justify-content-between">
            <p class="card-text">@Model.Post.Author.UserName</p>
            @if (User.Identity.IsAuthenticated)
            {
                <div>
                    <button class="btn btn-danger btn-sm" type="button" data-toggle="modal" data-target="#deleteModal">Delete</button>
                    <a class="btn btn-primary btn-sm ml-2" asp-action="Edit" asp-route-id="@Model.Post.Id">Edit</a>
                </div>
            }
        </div>
        <p class="card-text">
            <small class="text-muted">
                <time datetime="@Model.Post.CreatedTime.ToString("u")">@Html.DisplayFor(m => m.Post.CreatedTime)</time>
                @if (Model.Post.ModifiedTime != null)
                {
                    <time datetime="@(Model.Post.ModifiedTime.Value.ToString("u"))"> - (Modified at @Html.DisplayFor(m => m.Post.ModifiedTime))</time>
                }
            </small>
        </p>
        <div class="card-text">
            @Html.Raw(Model.Post.Content)
        </div>
        <div class="mt-4">
            Tags:
            @foreach (var tp in Model.Post.TagPosts)
            {
                <a class="btn btn-light btn-sm" asp-controller="Tag" asp-action="PostList" asp-route-slug="@tp.Tag.Slug">@Html.DisplayFor(m => tp.Tag.Name)</a>
            }
        </div>
    </div>
</div>
<div class="card mt-4">
    <div class="card-body">
        <h3 class="card-title">Comments</h3>
        <form asp-action="CreateComment" asp-route-slug="@Model.Post.Slug">
            @if (User.Identity.IsAuthenticated)
            {
                <p>You will post comment as <b>@User.Identity.Name</b>.</p>
            }
            else
            {
                <div class="form-group col-md-4 col-sm-12 px-0">
                    <label asp-for="Comment.AuthorName"></label>
                    <input asp-for="Comment.AuthorName" class="form-control"/>
                    <span asp-validation-for="Comment.AuthorName" class="form-text text-danger"></span>
                </div>

                <div class="form-group col-md-4 col-sm-12 px-0">
                    <label asp-for="Comment.AuthorEmail"></label>
                    <input asp-for="Comment.AuthorEmail" class="form-control"/>
                    <span asp-validation-for="Comment.AuthorEmail" class="form-text text-danger"></span>
                </div>
            }
            <div class="form-group">
                <label asp-for="Comment.Content"></label>
                <textarea asp-for="Comment.Content" class="form-control"></textarea>
                <span asp-validation-for="Comment.Content" class="form-text text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary">Post</button>
        </form>
        <hr/>
        @if (!Model.Post.Comments.Any())
        {
            <small class="card-text">Be the first to comment.</small>
        }
        @for (var i = 0; i < Model.Post.Comments.Count; i++)
        {
            <div>
            <div class="d-flex justify-content-between align-items-baseline">
                <p>
                    <b>@Html.DisplayFor(m => m.Post.Comments[i].AuthorName)</b>
                    - <small><time datetime="@Model.Post.Comments[i].CreatedTime.ToString("u")">@Html.DisplayFor(m => m.Post.Comments[i].CreatedTime)</time></small>
                </p>
                @if (User.Identity.IsAuthenticated)
                {
                    <button id="delete" class="btn btn-danger btn-sm" type="button" data-toggle="modal" data-target="#deleteCommentModal" data-id="@Model.Post.Comments[i].Id">Delete</button>
                }
            </div>
                <p>@Html.DisplayFor(m => m.Post.Comments[i].Content)</p>
                @if (i < Model.Post.Comments.Count - 1)
                {
                    <hr/>
                }
            </div>
        }
    </div>
</div>

@if (User.Identity.IsAuthenticated)
{
    <partial name="_DeleteModalPartial" model="@Model.Post"/>
    <div id="deleteCommentModal" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Delete Comment</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this comment?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                    <form asp-action="DeleteComment" asp-route-slug="@Model.Post.Slug" asp-route-id="0">
                        <button type="submit" class="btn btn-danger">Yes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        <script>
            $('#deleteCommentModal').on('show.bs.modal', function(event) {
                var button = $(event.relatedTarget);
                var id = button.data('id');
                var form = $(this).find('form');
                var action = form.attr('action');
                action = action.substring(0, action.lastIndexOf("/") + 1) + id;
                form.attr('action', action);
            });
        </script>
    }
}