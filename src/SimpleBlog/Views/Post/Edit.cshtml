@model PostInputModel
@inject CategoryService CategoryService
@inject TagService TagService
@{
    ViewBag.Title = $"Edit {Model.Title}";
    ViewBag.Categories = (await CategoryService.List(true))
        .Select(c => new SelectListItem(c.Name, c.Id.ToString()))
        .ToList();
    var tagList= await TagService.List();
    var tag = "";
    if (tagList.Any())
    {
        tag = tagList
            .Select(t => $"'{t.Name}'")
            .Aggregate((sum, next) => sum + ", " + next);
    }
    ViewBag.Tags = tag;
}


@section Stylesheets
{
    <link rel="stylesheet" href="~/lib/bootstrap-tagsinput/bootstrap-tagsinput.css" />
    <link rel="stylesheet" href="~/lib/bootstrap-tagsinput/bootstrap-tagsinput-typeahead.css" />
}

<div class="card">
    <form asp-action="CreateOrUpdate" asp-route-id="@(Model.Id != 0 ? Model.Id : (object) null)" asp-a class="m-3">
        <div asp-validation-summary="All" class="text-danger"></div>

        <div class="form-group">
            <label asp-for="Title"></label>
            <input asp-for="Title" class="form-control"/>
            <span asp-validation-for="Title" class="form-text text-danger"></span>
        </div>

        <div class="form-row">
            <div class="form-group col">
                <label asp-for="CategoryId"></label>
                <select asp-for="CategoryId" asp-items="@ViewBag.Categories" class="custom-select"></select>
                <span asp-validation-for="CategoryId" class="form-text text-danger"></span>
            </div>

            <div class="form-group col">
                <label asp-for="Tags"></label>
                <input asp-for="Tags" class="form-control" data-role="tagsinput"/>
                <span asp-validation-for="Tags" class="form-text text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="Excerpt"></label>
            <textarea asp-for="Excerpt" class="form-control"></textarea>
            <span asp-validation-for="Excerpt" class="form-text text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Content"></label>
            <textarea asp-for="Content" class="form-control"></textarea>
            <span asp-validation-for="Content" class="form-text text-danger"></span>
        </div>

        <div class="mt-5 d-flex justify-content-between align-items-baseline">
            <div class="d-inline-flex align-items-baseline">
                <div class="custom-control custom-switch">
                    <input asp-for="IsDraft" type="checkbox" class="custom-control-input">
                    <label asp-for="IsDraft" class="custom-control-label"></label>
                </div>
            </div>
            <div class="d-inline-flex align-items-baseline">
                @if (Model.Id != 0)
                {
                    <button type="button" class="btn btn-danger btn-sm mr-3" data-toggle="modal" data-target="#deleteModal">Delete</button>
                }
                <button id="submit" type="submit" class="btn btn-primary px-4">@(Model.IsDraft ? "Save" : "Publish")</button>
            </div>
        </div>
    </form>
</div>
<partial name="_DeleteModalPartial" for="@Model" />

@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script src="~/lib/tinymce/tinymce.min.js"></script>
    <script src="~/lib/typeahead.js/typeahead.jquery.min.js"></script>
    <script src="~/lib/typeahead.js/bloodhound.min.js"></script>
    <script src="~/lib/bootstrap-tagsinput/bootstrap-tagsinput.min.js"></script>

    <script>
        tinymce.init({
            selector: '@($"#{nameof(Model.Content)}")',
            height: 480
        });

        $('@($"#{nameof(Model.IsDraft)}")').on('change', function() {
            $('#submit').text(this.checked ? 'Save' : 'Publish');
        });

        var tags = new Bloodhound({
            local: [@Html.Raw(tag)],
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            datumTokenizer: Bloodhound.tokenizers.whitespace
        });
        tags.initialize();

        $('#Tags').tagsinput({
            typeaheadjs: {
                source: tags.ttAdapter()
            }
        });
    </script>
}